// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model User {
  id              String       @id @default(cuid())
  email           String       @unique
  password        String
  fullName        String
  username        String
  appleMusicToken String?
  tokenExpiryDate DateTime?
  ratings         Rating[]
  albums          Album[]
  songs           Song[]
}

model Album {


  id          String   @id @default(cuid())
  albumId     String   @unique
  dateAdded   String?
  genreNames  String[]
  releaseDate String?

  name        String?
  artistName  String?
  artworkUrl  String?
  trackCount  Int?
  href        String?
  type        String
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Rating {
  id        String   @id @default(cuid())
  songId    String
  catalogId String?
  userId    String
  value     Int
  durationInMillis Int 
  ratedAt   DateTime @default(now())
  songName  String?  // Optional field for song name
  artistName String? // Optional field for artist name
  albumName String?  // Optional field for album name
  artworkUrl String? // Optional field for artwork URL

  // Relations
  user User @relation(fields: [userId], references: [id])
}

model Song {
  id               String       @id @default(cuid())
  songId           String       @unique
  name             String?
  trackNumber      Int?
  artistName       String?
  albumName        String?
  durationInMillis Int
  artworkUrl       String?
  userId           String
  catalogId       String?
  user             User         @relation(fields: [userId], references: [id])
}